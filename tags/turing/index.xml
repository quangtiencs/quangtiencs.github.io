<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>turing on quangtiencs</title>
    <link>https://quangtiencs.com/tags/turing/</link>
    <description>Recent content in turing on quangtiencs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>quangtiencs ➤ bet on myself &amp; beat the odds</copyright>
    <lastBuildDate>Sun, 23 Apr 2023 08:00:00 +0700</lastBuildDate><atom:link href="https://quangtiencs.com/tags/turing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[playground] Julia Turing.jl : Bayesian Cognitive Modeling - Some examples of data analysis</title>
      <link>https://quangtiencs.com/posts/turing_julia_bcm_chapter_005/</link>
      <pubDate>Sun, 23 Apr 2023 08:00:00 +0700</pubDate>
      
      <guid>https://quangtiencs.com/posts/turing_julia_bcm_chapter_005/</guid>
      <description>Github: https://github.com/quangtiencs/learning_notebook/blob/main/bcm-bayesian-cognitive-modeling/turing.jl-julia/ParameterEstimation/DataAnalysis.ipynb
import Logging using DynamicPPL, Turing using Zygote, ReverseDiff using StatsPlots, Random using LaTeXStrings using CSV using DataFrames using SpecialFunctions using LinearAlgebra using FillArrays using CSV, DataFrames Random.seed!(6) format=:svg 5.1 Pearson correlation $$ \mu_{1},\mu_{2} \sim \text{Gaussian}(0, 1/ \sqrt{.001}) $$ $$ \sigma_{1},\sigma_{2} \sim \text{InvSqrtGamma} (.001, .001) $$ $$ r \sim \text{Uniform} (-1, 1) $$
$$ x_{i} \sim \text{MvGaussian} \left( (\mu_{1},\mu_{2}), \begin{bmatrix}\sigma_{1}^2 &amp;amp; r\sigma_{1}\sigma_{2}\r\sigma_{1}\sigma_{2} &amp;amp; \sigma_{2}^2\end{bmatrix} \right) $$
x = [[0.</description>
    </item>
    
    <item>
      <title>[playground] Julia Turing.jl : Bayesian Cognitive Modeling - Inferences with gaussians</title>
      <link>https://quangtiencs.com/posts/turing_julia_bcm_chapter_004/</link>
      <pubDate>Wed, 22 Mar 2023 08:00:00 +0700</pubDate>
      
      <guid>https://quangtiencs.com/posts/turing_julia_bcm_chapter_004/</guid>
      <description>Github: https://github.com/quangtiencs/learning_notebook/blob/main/bcm-bayesian-cognitive-modeling/turing.jl-julia/ParameterEstimation/Gaussian.ipynb
using DynamicPPL, Turing using StatsPlots, Random using LaTeXStrings using CSV using DataFrames using SpecialFunctions format=:png 4.1 Inferring a mean and standard deviation $$ \mu \sim \text{Gaussian}(0, \sqrt{1000}) $$ $$ \sigma \sim \text{Uniform} (0, 10) $$ $$ x_{i} \sim \text{Gaussian} (\mu, \sigma^2) $$
x = [1.1, 1.9, 2.3, 1.8] @model function GaussianModel(x) mu ~ Normal(0, sqrt(1000)) sigma ~ Uniform(0, 10.0) for i in eachindex(x) x[i] ~ Normal(mu, sigma) end end iterations=10_000 chain = sample(GaussianModel(x), NUTS(2000, 0.</description>
    </item>
    
    <item>
      <title>[playground] Julia Turing.jl : Bayesian Cognitive Modeling - Inferences with binomials</title>
      <link>https://quangtiencs.com/posts/turing_julia_bcm_chapter_003/</link>
      <pubDate>Sat, 18 Mar 2023 08:00:00 +0700</pubDate>
      
      <guid>https://quangtiencs.com/posts/turing_julia_bcm_chapter_003/</guid>
      <description>Github: https://github.com/quangtiencs/learning_notebook/blob/main/bcm-bayesian-cognitive-modeling/turing.jl-julia/ParameterEstimation/Binomial.ipynb
3.1 Inferring a rate $$ \theta \sim \text{Beta}(1, 1) $$ $$ k \sim \text{Binomial} ( \theta, n) $$
using DynamicPPL, Turing using StatsPlots, Random using LaTeXStrings using CSV using DataFrames using SpecialFunctions k = 5 n = 10 @model function BinomialModel(k) theta ~ Beta(1, 1) k ~ Binomial(n, theta) end iterations = 1_000 ϵ = 0.05 τ = 10 chain = sample(BinomialModel(k), HMC(ϵ, τ), iterations) p = histogram(chain[:theta], label=L&#34;</description>
    </item>
    
  </channel>
</rss>
