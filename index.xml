<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>quangtiencs</title>
    <link>https://quangtiencs.com/</link>
    <description>Recent content on quangtiencs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>quangtiencs ➤ bet on myself &amp; beat the odds</copyright>
    <lastBuildDate>Mon, 23 Jan 2023 08:00:00 +0700</lastBuildDate><atom:link href="https://quangtiencs.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[playground] Tensorflow.Js &amp; Typescript [4]: Quantile Regression</title>
      <link>https://quangtiencs.com/posts/tensorflowjs_typescript_04/</link>
      <pubDate>Mon, 23 Jan 2023 08:00:00 +0700</pubDate>
      
      <guid>https://quangtiencs.com/posts/tensorflowjs_typescript_04/</guid>
      <description>Quantile Regression is one of the practical techniques for many real problems. In this tutorial, we will implement a custom loss for TensorflowJS.
Quantile Loss:
$$\mathcal{L}(y_{\mathtt{true}}, y_{\mathtt{pred}}) = \begin{cases} (y_{\mathtt{true}} - y_{\mathtt{pred}}) \alpha &amp;amp;\text{if } y_{\mathtt{true}} \ge y_{\mathtt{pred}} \\ (y_{\mathtt{true}} - y_{\mathtt{pred}}) (\alpha - 1) &amp;amp;\text{if } y_{\mathtt{true}} &amp;lt; y_{\mathtt{pred}} \end{cases} $$
Or for easy computing:
$$\mathcal{L}(y_{\mathtt{true}}, y_{\mathtt{pred}}) = \mathtt{max}((y_{\mathtt{true}} - y_{\mathtt{pred}}) \alpha, (y_{\mathtt{true}} - y_{\mathtt{pred}}) (\alpha - 1)) $$</description>
    </item>
    
    <item>
      <title>[playground] Tensorflow.Js &amp; Typescript [3]: Modeling</title>
      <link>https://quangtiencs.com/posts/tensorflowjs_typescript_03/</link>
      <pubDate>Sun, 22 Jan 2023 20:00:00 +0700</pubDate>
      
      <guid>https://quangtiencs.com/posts/tensorflowjs_typescript_03/</guid>
      <description>Tensorflow.JS provides an application programming interface similar to Tensorflow (Python API). Although it has few choices (layers, models, optimizers), it is still helpful in some applications that need online learning on client devices.
1. APIs: Sometimes useful:
Layers API: tf.layers.dense, tf.layers.dropout, tf.layers.embedding, tf.layers.dense (elu, hardSigmoid, linear, relu, relu6, selu, sigmoid, softmax, softplus, softsign, tanh, swish, mish), Model API: tf.sequential, tf.model. Build-In Optimizers: sgd, adagrad, adadelta, adam, adamax, rmsprop. Build-In Loss functions: tf.</description>
    </item>
    
    <item>
      <title>[playground] Tensorflow.Js &amp; Typescript [2]: Memory management</title>
      <link>https://quangtiencs.com/posts/tensorflowjs_typescript_02/</link>
      <pubDate>Sat, 05 Nov 2022 00:00:00 +0530</pubDate>
      
      <guid>https://quangtiencs.com/posts/tensorflowjs_typescript_02/</guid>
      <description>Management Memory is essential for every program to work efficiently. Although Javascript has a Garbage Collector, our programs with TensorflowJS don&amp;rsquo;t get the same automatic memory management.
The tensor objects are persistent with the memory, although the javascript variable has no reference. This lead to memory leak problem.
Let&amp;rsquo;s understand the problem deeper through examples!
1. Memory information: Sometimes you need to get your memory information, and these functions are helpful:</description>
    </item>
    
    <item>
      <title>[playground] Tensorflow.Js &amp; Typescript [1]: Quick Start</title>
      <link>https://quangtiencs.com/posts/tensorflowjs_typescript_01/</link>
      <pubDate>Tue, 27 Sep 2022 00:00:00 +0530</pubDate>
      
      <guid>https://quangtiencs.com/posts/tensorflowjs_typescript_01/</guid>
      <description>TensorFlow is one of the most well-known libraries for machine learning. The most significant advantage of TensorFlow versus other libraries is designed to simplify the development of cross-platform projects.
These days, TensorFlow.js (Javascript) is a sub-project of Tensorflow that support three environments: Node.js, Web browser, and Mobile (via React Native). Unfortunately, Javascript is not a good programming language for data science projects because it is easy to make mistakes with little experience.</description>
    </item>
    
    <item>
      <title>007 - a kite dancing in a hurricane</title>
      <link>https://quangtiencs.com/english/a_kite_dancing_in_a_hurricane/</link>
      <pubDate>Fri, 12 Aug 2022 00:00:00 +0530</pubDate>
      
      <guid>https://quangtiencs.com/english/a_kite_dancing_in_a_hurricane/</guid>
      <description>Life is just a dream. Be a kite dancing in a hurricane. A metaphor about life - something is dangerous, like a storm that readily destroys our fragile hopes. Don&amp;rsquo;t be against it; dance with it.
Lê Quang Tiến - 2022-08-12</description>
    </item>
    
    <item>
      <title>Julia Language - Euler Project</title>
      <link>https://quangtiencs.com/posts/julia_euler_project/</link>
      <pubDate>Sun, 10 Jul 2022 00:00:00 +0530</pubDate>
      
      <guid>https://quangtiencs.com/posts/julia_euler_project/</guid>
      <description>Github: https://github.com/quangtiencs/julia_project_euler Project Euler 8: Largest product in a series HackerRank: https://www.hackerrank.com/contests/projecteuler/challenges/euler008 Euler: https://projecteuler.net/problem=8 function greatest_product_of_consecutive_digits(array::Array{Int}, k::Int)::Int product = prod(array[1:k]) cache = array[1] maximum_prod = product for i in 1:(length(array)-k) if cache != 0 product = div(product, cache) * array[k+i] else product = prod(array[1+i:k+i]) end cache = array[1+i] if product &amp;gt; maximum_prod maximum_prod = product end end return maximum_prod end function main() t = parse(Int64, readline()) for i in 1:t n, k = map((x) -&amp;gt; parse(Int64, x), split(readline(), &amp;quot; &amp;quot;)) arr_number = [parse(Int, e) for e in readline()] result = greatest_product_of_consecutive_digits(arr_number, k) println(result) end end main() Project Euler 7: 10001st prime HackerRank: https://www.</description>
    </item>
    
    <item>
      <title>Bayesian Multi-Logit Regression implemented in Tensorflow Probability</title>
      <link>https://quangtiencs.com/posts/bayesian_logistics_tensorflow_probability/</link>
      <pubDate>Sun, 20 Feb 2022 00:00:00 +0530</pubDate>
      
      <guid>https://quangtiencs.com/posts/bayesian_logistics_tensorflow_probability/</guid>
      <description>Bayesian Multi-Logit Regression is a probabilistic model for multiclass classification. This tutorial will make a prototype model in Tensorflow Probability and fit it with No-U-Turn Sampler.
Let&amp;rsquo;s start!
1. Model specification: Multi-Logit regression for \(K\) classes has the following form:
$$p(y | x, \beta) = \text{Categorical}(y| \text{softmax}(x \beta))$$
With:
\(x \): input features (row) vector \(x = [x_1,&amp;hellip; x_D] \in R^D \) \(y \): the predicted outcome of the class label \(\beta \): weight matrix for \(K\) classes and \(D\) dimensions The bayesian version of this model with pior:</description>
    </item>
    
    <item>
      <title>(thơ Tiến viết tặng bạn bè) - Nếu ngày mai anh hói</title>
      <link>https://quangtiencs.com/vietnam/neu_ngay_mai_anh_hoi/</link>
      <pubDate>Wed, 09 Feb 2022 00:00:00 +0530</pubDate>
      
      <guid>https://quangtiencs.com/vietnam/neu_ngay_mai_anh_hoi/</guid>
      <description>&amp;hellip;trong nhóm 5 đứa bạn thân CNTT thì bị hói gần hết&amp;hellip; thế nên mình xin viết một bài thơ hài hước, đau thương nhưng cũng đầy ý nghĩa&amp;hellip; :D
(thơ vui Tiến viết) - &amp;ldquo;Nếu ngày mai anh hói&amp;rdquo;
Nếu ngày mai anh hói
Liệu em có&amp;hellip; từ chối yêu anh?
Hói chắc không, mà hôi&amp;hellip; chắc chắn có
Nhưng em ơi, hỏi cho vui
Dẫu hói, dẫu hôi</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://quangtiencs.com/about/</link>
      <pubDate>Thu, 12 Aug 2021 07:00:00 +0000</pubDate>
      
      <guid>https://quangtiencs.com/about/</guid>
      <description>Hi, this is quangtiencs’s log, a homepage of my engineering life. I am Tien Le-Quang (Lê Quang Tiến), a ˈdeɪtə dɪˈtektɪv (a.k.a data detective or data scientist).
With a lifelong learning mindset, I am on the road to becoming a magical statistician, a world-class engineer :D
As a critical-thinking practitioner, my opinions are always subject to rethinking and revision. If you find any mistakes, please do not hesitate to give me feedback.</description>
    </item>
    
    <item>
      <title>Personal Project</title>
      <link>https://quangtiencs.com/project/</link>
      <pubDate>Thu, 12 Aug 2021 07:00:00 +0000</pubDate>
      
      <guid>https://quangtiencs.com/project/</guid>
      <description> [Public] khuvuonngontu.com Coming soon [Private] Symphonic Sigma [Public] ThetaLog.com My blog about computer science and data science. The theta notation is used to define statistical machine learning parameters. The log is any of various chronological records made concerning the changing of theta – ThetaLog.com. Some articles: Locally Linear Embedding, PageRank, Deferred-Acceptance Algorithm, Kalman Filter, FastICA, Bayesian Optimization,&amp;hellip; </description>
    </item>
    
    <item>
      <title>Viết cho Coursera</title>
      <link>https://quangtiencs.com/vietnam/viet_cho_coursera/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0530</pubDate>
      
      <guid>https://quangtiencs.com/vietnam/viet_cho_coursera/</guid>
      <description>Mình thích bức ảnh này! Bức ảnh này được đăng khi Coursera chính thức IPO hồi cuối tháng 3 năm nay. Dẫu biết bức tượng đã ở đó từ lâu rồi&amp;hellip; ấy vậy nhưng lại gợi nên vài suy nghĩ thoáng qua&amp;hellip; và đơn giản là thích vài thoáng suy nghĩ ấy&amp;hellip;
Hình ảnh là một bé gái, dõng dạc, chóng tay tự tin, thách thức nhìn thẳng bầu trời - nơi tượng trưng cho hình ảnh sự tự do&amp;hellip; với dòng khẩu hiệu đơn giản nhưng đầy sâu sắc &amp;ldquo;Learn without limits&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Rửa chén</title>
      <link>https://quangtiencs.com/vietnam/rua_chen/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:00 +0530</pubDate>
      
      <guid>https://quangtiencs.com/vietnam/rua_chen/</guid>
      <description>&amp;hellip;mỗi lần say mê rửa chén là lại nghĩ ra cái gì đó hay ho. Hóa ra, khi đôi bàn tay ta làm những việc thật &amp;ldquo;khủng khiếp&amp;rdquo;, &amp;ldquo;nhem nhuốc&amp;rdquo;, &amp;ldquo;dơ bẩn&amp;rdquo; là nơi của mọi thứ bắt đầu&amp;hellip; cả thế giới to đùng bỗng chốc thu bé lại chỉ bằng mấy cái chén chưa rửa xong&amp;hellip;
Giờ chẳng nhẽ nhận thêm việc rửa chén bán thời gian cho tăng năng suất công việc nhỉ?</description>
    </item>
    
    <item>
      <title>Đặt cược</title>
      <link>https://quangtiencs.com/vietnam/dat_cuoc/</link>
      <pubDate>Wed, 23 Sep 2020 00:00:00 +0530</pubDate>
      
      <guid>https://quangtiencs.com/vietnam/dat_cuoc/</guid>
      <description>CURRENT STATUS: [ vẫn đang độc thân - viết vui thôi chứ có tỏ tình ai đâu]
Bet on myself and beat the odds.
&amp;hellip;liệu em có thể yêu một gã đánh bạc như anh?
Đặt cược tất cả vào bản thân mình&amp;hellip; để chiến đấu với mọi thử thách.
Có / Không thôi nhé? Đây là một câu hỏi khó &amp;amp; cần một lời giải chân phương&amp;hellip;
Lê Quang Tiến - viết vào ngày 23 tháng 09 năm 2020</description>
    </item>
    
    <item>
      <title>Lập trình</title>
      <link>https://quangtiencs.com/vietnam/lap_trinh/</link>
      <pubDate>Tue, 24 Dec 2019 00:00:00 +0530</pubDate>
      
      <guid>https://quangtiencs.com/vietnam/lap_trinh/</guid>
      <description>Phải tập lập trình giống vầy thôi!
Một vài đoạn cao trào điên đảo, một vài đoạn nhịp nhàng như thể từng mắc xích nhỏ trong hệ thống phối hợp cùng nhau, tách rời nhưng không tách biệt, mỗi thành phần đều góp phần cộng hưởng tạo nên vẻ đẹp của toàn bộ hệ thống. Như một khúc nhạc nhịp nhàng và tinh vi&amp;hellip;
Nhạc: Beethoven &amp;ldquo;Moonlight&amp;rdquo; Sonata, III &amp;ldquo;Presto Agitato&amp;rdquo; Valentina Lisitsa</description>
    </item>
    
  </channel>
</rss>
